[package]
name = "ticket_system"
version = "0.1.0"
edition = "2021"
description = "High-performance ticket booking system"
license = "MIT"
repository = "https://github.com/yourusername/ticket-system"

[dependencies]
# === Core async runtime ===
tokio = { version = "1.47", features = ["full"] }
futures = "0.3"
mimalloc = "0.1"

# === Web framework ===
axum = { version = "0.8", features = ["macros", "ws"] }
tower-http = { version = "^0.6", features = ["trace", "cors"] }

# === Serialization ===
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_urlencoded = "0.7.1"

# === Database ===
sqlx = { version = "0.8", features = [
    "runtime-tokio-rustls",
    "postgres",
    "macros",
    "chrono",
    "uuid",
    "json",
    "migrate"
] }

# === Caching ===
redis = { version = "0.32", features = ["tokio-comp", "connection-manager"] }

# === Authentication & Security ===
bcrypt = "0.17"
jsonwebtoken = "9.3"
base64 = "0.22"
sha2 = "0.10"

# === HTTP Client ===
reqwest = { version = "0.12", features = ["json", "rustls-tls", "cookies", "gzip"] }

# === Validation ===
validator = { version = "0.20", features = ["derive"] }

# === Resilience Patterns ===
failsafe = "1.3"

# === Logging & Tracing ===
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json"] }

# === Configuration ===
dotenvy = "0.15"
config = "0.14"

# === Utilities ===
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.10", features = ["v4", "serde", "fast-rng"] }
thiserror = "2.0"
anyhow = "1.0"

# === Development dependencies ===
[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
mockito = "1.6"
proptest = "1.6"
fake = { version = "2.10", features = ["derive"] }
wiremock = "0.6"

# === Build dependencies ===
[build-dependencies]

# === Profile configurations ===
[profile.dev]
opt-level = 0
debug = true
split-debuginfo = "unpacked"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = 'abort'
strip = true
debug = false

[profile.bench]
inherits = "release"
lto = false

# === Workspace configuration (if using workspace) ===
[workspace]
members = []
resolver = "2"

# === Feature flags ===
[features]
default = ["full"]
full = ["auth", "search", "analytics", "rate-limiting"]
auth = []
search = []
analytics = []
rate-limiting = []

# === Package metadata ===
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]